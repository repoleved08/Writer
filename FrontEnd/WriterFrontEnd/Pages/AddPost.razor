@page "/addpost"

@inject NavigationManager navManager
@using System.Security.Claims
@using Microsoft.AspNetCore.Authorization
@inject IPostsInterface postInterface
@*@inject AuthenticationStateProvider AuthenticationStateProvider*@
@attribute [Authorize]

<div class="container mt-5">
    <h2>Add New Post</h2>

    <div class="row">
        <div class="col-md-6">
            <!-- Add post form -->
            <form>
                <div class="form-group">
                    <label for="postTitle">Title</label>
                    <input type="text" class="form-control" id="postTitle" @bind="newPost.Title">
                </div>
                <div class="form-group">
                    <label for="postContent">Content</label>
                    <textarea class="form-control" id="postContent" @bind="newPost.Body" rows="4"></textarea>
                </div>
                <button type="button" class="btn btn-primary" @onclick="()=>InsertNewPost(newPost.UserId)" >Add Post</button>
            </form>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Id { get; set; }

    public PostRequestDto newPost = new PostRequestDto();

   // [CascadingParameter]
   // public Task<AuthenticationState> authenticate { get; set; }

    public async Task InsertNewPost(Guid id)
    {
       // var authState = await authenticate;
       // var userId = authState.User.FindFirst("sub")?.Value;

      //  newPost.UserId = Guid.Parse(userId);

        var res = await postInterface.AddPost(newPost);

        navManager.NavigateTo("/posts");
    }
}
