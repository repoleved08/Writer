@page "/Log"
@using WriterFrontEnd.Models.Authentication
@using WriterFrontEnd.Services.Auth
@using Blazored.LocalStorage;
@using Microsoft.AspNetCore.Components.Authorization;
@inject IAuthentInterface authInterface
@inject ILocalStorageService localstorage
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navigationManager


@*Bootstrap*@
<style>
    .card {
        margin-top: 50px;
    }

    .card-img-top {
        height: 200px;
        object-fit: cover;
    }

    .btn-primary {
        width: 100px;
    }

    .btn-secondary {
        width: 100px;
    }
</style>

@*End styling*@

<div class="container mt-5">
    <div class="row justify-content-lg-center">
        <div class="col-lg-4">
            <div class="card">
                <img src="https://cdn.pixabay.com/photo/2018/05/28/02/08/diary-3435095_640.jpg" class="card-img-top" alt="Login Image">
                <div class="card-body">
                    <h1 class="card-title">Login User</h1>
                    <EditForm Model="@user" OnValidSubmit="LoginU">
                        <DataAnnotationsValidator />

                        <div class="form-group">
                            <label for="email">Username</label>
                            <InputText type="email" class="form-control" id="email" @bind-Value="@user.Email" />
                            <ValidationMessage For="@(()=>user.Email)" />
                        </div>

                        <div class="form-group">
                            <label for="password">Password</label>
                            <InputText type="password" class="form-control" id="password" @bind-Value="@user.Password" />
                            <ValidationMessage For="@(()=>user.Password)" />
                        </div>
                        <div class="d-flex justify-content-between">
                            <button type="submit" class="btn btn-primary">Submit</button>
                            <button type="button" class="btn btn-secondary">Reset</button>
                        </div>
                        <div class="mt-3">
                            <p>Not Registered? <a href="/register">Register</a></p>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>



@*End*@


@code {
    private LoginDto user = new LoginDto();

    private async Task LoginU()
    {
        var res = await authInterface.LoginUser(user);
        Console.WriteLine(res.Token);
        if (!string.IsNullOrWhiteSpace(res.Token))
        {
            await localstorage.SetItemAsStringAsync("authToken", res.Token);
            await authStateProvider.GetAuthenticationStateAsync();
            navigationManager.NavigateTo("");
        }
    }
}